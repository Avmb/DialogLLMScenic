{
  "docstring": "TITLE: Intersection 10\nAUTHOR: Francis Indaheng, findaheng@berkeley.edu\nDESCRIPTION: Ego Vehicle waits at 4-way intersection while adversary \nvehicle in adjacent lane passes before performing a lane change to \nbypass a stationary vehicle waiting to make a left turn.\nSOURCE: NHSTA, #16",
  "has_docstring": true,
  "body": "#################################\n# MAP AND MODEL                 #\n#################################\n\nparam map = localPath('../../../../tests/formats/opendrive/maps/CARLA/Town05.xodr')\nparam carla_map = 'Town05'\nmodel scenic.simulators.carla.model\n\n#################################\n# CONSTANTS                     #\n#################################\n\nMODEL = 'vehicle.lincoln.mkz2017'\n\nparam EGO_INIT_DIST = VerifaiRange(10, 15)\nparam EGO_SPEED = VerifaiRange(7, 10)\nparam EGO_BRAKE = VerifaiRange(0.5, 1.0)\n\nSTAT_INIT_DIST = [0, 5]\n\nADV_INIT_DIST = [15, 20]\nADV_SPEED = 10\n\nBYPASS_DIST = 8\nTERM_DIST = 70\n\n#################################\n# AGENT BEHAVIORS               #\n#################################\n\nbehavior EgoBehavior():\n\twhile (distance to adversary) < BYPASS_DIST:\n\t\ttake SetBrakeAction(globalParameters.EGO_BRAKE)\n\trightLaneSec = self.laneSection.laneToRight\n\tdo LaneChangeBehavior(\n\t\t\tlaneSectionToSwitch=rightLaneSec,\n\t\t\ttarget_speed=globalParameters.EGO_SPEED)\n\tdo FollowLaneBehavior(target_speed=globalParameters.EGO_SPEED)\n\n#################################\n# SPATIAL RELATIONS             #\n#################################\n\nintersection = Uniform(*filter(lambda i: i.is4Way, network.intersections))\n\nstatInitLane = Uniform(*filter(lambda lane: \n\tall([sec._laneToRight is not None for sec in lane.sections]),\n\tintersection.incomingLanes))\nstatSpawnPt = OrientedPoint in statInitLane.centerline\n\nadvInitLane = statInitLane.sectionAt(statSpawnPt).laneToRight.lane\nadvManeuver = Uniform(*filter(lambda m: m.type is ManeuverType.STRAIGHT, advInitLane.maneuvers))\nadvTrajectory = [advInitLane, advManeuver.connectingLane, advManeuver.endLane]\nadvSpawnPt = OrientedPoint in advInitLane.centerline\n\n#################################\n# SCENARIO SPECIFICATION        #\n#################################\n\nstationary = Car at statSpawnPt,\n\twith blueprint MODEL\n\nego = Car behind stationary by globalParameters.EGO_INIT_DIST,\n\twith blueprint MODEL,\n\twith behavior EgoBehavior()\n\nadversary = Car at advSpawnPt,\n\twith blueprint MODEL,\n\twith behavior FollowTrajectoryBehavior(target_speed=ADV_SPEED, trajectory=advTrajectory)\n\nrequire STAT_INIT_DIST[0] <= (distance from stationary to intersection) <= STAT_INIT_DIST[1]\nrequire ADV_INIT_DIST[0] <= (distance from adversary to intersection) <= ADV_INIT_DIST[1]\nterminate when (distance to statSpawnPt) > TERM_DIST"
}